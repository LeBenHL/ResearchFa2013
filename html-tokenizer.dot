digraph HTML5Tokenizer {
	orientation=landscape;
	rankdir=TB;
	subgraph cluster_comment {
		style=filled;
		color="#B3A2C73f";
		rank=same;
		label="comment states";
		"comment-end-bang-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
		"comment-start-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
		"comment-end-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
		"comment-start-dash-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
		"comment-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
		"comment-end-dash-state" [shape=egg, style=filled, fillcolor="#B3A2C72f"];
	}
	subgraph cluster_rawtext {
		style=filled;
		color="#C3D69B3f";
		rank=same;
		label="rawtext states";
		"rawtext-less-than-sign-state" [shape=egg, style=filled, fillcolor="#C3D69B2f"];
		"rawtext-state" [shape=egg, style=filled, fillcolor="#C3D69B2f"];
	}
	subgraph cluster_script {
		style=filled;
		color="#D996943f";
		rank=same;
		label="script states";
		"script-data-escaped-end-tag-name-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escaped-less-than-sign-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-end-tag-name-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escape-end-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escape-start-dash-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escaped-dash-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escaped-less-than-sign-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-end-tag-open-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escaped-dash-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-less-than-sign-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escaped-dash-dash-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escaped-dash-dash-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escaped-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escaped-end-tag-open-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escaped-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-double-escape-start-state" [shape=egg, style=filled, fillcolor="#D996942f"];
		"script-data-escape-start-state" [shape=egg, style=filled, fillcolor="#D996942f"];
	}
	subgraph cluster_plaintext {
		style=filled;
		color="#95B3D73f";
		rank=same;
		label="plaintext states";
		"plaintext-state" [shape=egg, style=filled, fillcolor="#95B3D72f"];
	}
	subgraph cluster_attribute {
		style=filled;
		color="#F796463f";
		rank=same;
		label="attribute states";
		"attribute-value-(single-quoted)-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"before-attribute-name-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"attribute-name-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"before-attribute-value-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"after-attribute-name-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"attribute-value-(double-quoted)-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"attribute-value-(unquoted)-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"after-attribute-value-(quoted)-state" [shape=egg, style=filled, fillcolor="#F796462f"];
		"character-reference-in-attribute-value-state" [shape=egg, style=filled, fillcolor="#F796462f"];
	}
	subgraph cluster_rcdata {
		style=filled;
		color="#8064A23f";
		rank=same;
		label="rcdata states";
		"rcdata-state" [shape=egg, style=filled, fillcolor="#8064A22f"];
		"rcdata-less-than-sign-state" [shape=egg, style=filled, fillcolor="#8064A22f"];
		"character-reference-in-rcdata-state" [shape=egg, style=filled, fillcolor="#8064A22f"];
	}
	subgraph cluster_doctype {
		style=filled;
		color="#4BACC63f";
		rank=same;
		label="doctype states";
		"before-doctype-system-identifier-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-public-identifier-(double-quoted)-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"between-doctype-public-and-system-identifiers-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"after-doctype-public-identifier-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"after-doctype-system-identifier-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-system-identifier-(single-quoted)-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-name-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"after-doctype-name-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"after-doctype-system-keyword-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"before-doctype-name-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-public-identifier-(single-quoted)-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"doctype-system-identifier-(double-quoted)-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"before-doctype-public-identifier-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"after-doctype-public-keyword-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
		"bogus-doctype-state" [shape=egg, style=filled, fillcolor="#4BACC62f"];
	}
	subgraph cluster_tag {
		style=filled;
		color="#77933C3f";
		rank=same;
		label="tag states";
		"rcdata-end-tag-name-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"tag-name-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"appropriate-end-tag-token" [shape=box, style=filled, fillcolor="#efefef"];
		"rcdata-end-tag-open-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"end-tag-open-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"rawtext-end-tag-name-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"tag-open-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"rawtext-end-tag-open-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
		"self-closing-start-tag-state" [shape=egg, style=filled, fillcolor="#77933C2f"];
	}
"emit-character U+0021" [shape=box, style=filled, fillcolor="#efefef"];
"ascii-case-insensitive" [shape=box, style=filled, fillcolor="#efefef"];
"ignore-character" [shape=box, style=filled, fillcolor="#efefef"];
"emit-character U+FFFD" [shape=box, style=filled, fillcolor="#efefef"];
"additional-allowed-character" [shape=box, style=filled, fillcolor="#efefef"];
"temporary-buffer" [shape=box, style=filled, fillcolor="#efefef"];
"emit-character U+003C" [shape=box, style=filled, fillcolor="#efefef"];
"parse-error" [shape=box, style=filled, fillcolor="#efefef"];
"character-reference-in-data-state" [shape=egg, style=filled, fillcolor="#efefef"];
"data-state" [shape=egg, style=filled, fillcolor="#efefef"];
"markup-declaration-open-state" [shape=egg, style=filled, fillcolor="#efefef"];
"end-of-file" [shape=box, style=filled, fillcolor="#efefef"];
"current-input-character" [shape=box, style=filled, fillcolor="#efefef"];
"emit-character U+002F" [shape=box, style=filled, fillcolor="#efefef"];
"emit-character U+002D" [shape=box, style=filled, fillcolor="#efefef"];


"before-doctype-system-identifier-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"before-doctype-system-identifier-state" -> "doctype-system-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"before-doctype-system-identifier-state" -> "doctype-system-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"before-doctype-system-identifier-state" -> "parse-error" [label="'&gt;' U+003E, EOF, Anything else"];
"before-doctype-system-identifier-state" -> "data-state" [label="'&gt;' U+003E"];
"before-doctype-system-identifier-state" -> "bogus-doctype-state" [label="Anything else"];
"script-data-escaped-end-tag-name-state" -> "appropriate-end-tag-token" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E"];
"script-data-escaped-end-tag-name-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"script-data-escaped-end-tag-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"script-data-escaped-end-tag-name-state" -> "data-state" [label="'&gt;' U+003E"];
"script-data-escaped-end-tag-name-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-escaped-end-tag-name-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-escaped-end-tag-name-state" -> "script-data-escaped-state" [label="Anything else"];
"script-data-escaped-end-tag-name-state" -> "emit-character U+003C" [label="Anything else"];
"script-data-state" -> "script-data-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-state" -> "parse-error" [label="'\x00' U+0000"];
"script-data-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"script-data-state" -> "end-of-file" [label="EOF"];
"script-data-state" -> "current-input-character" [label="Anything else"];
"doctype-public-identifier-(double-quoted)-state" -> "after-doctype-public-identifier-state" [label="'&quot;' U+0022"];
"doctype-public-identifier-(double-quoted)-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"doctype-public-identifier-(double-quoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"doctype-public-identifier-(double-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-double-escaped-less-than-sign-state" -> "temporary-buffer" [label="'/' U+002F"];
"script-data-double-escaped-less-than-sign-state" -> "script-data-double-escape-end-state" [label="'/' U+002F"];
"script-data-double-escaped-less-than-sign-state" -> "emit-character U+002F" [label="'/' U+002F"];
"script-data-double-escaped-less-than-sign-state" -> "script-data-double-escaped-state" [label="Anything else"];
"script-data-double-escaped-less-than-sign-state" -> "current-input-character" [label="Anything else"];
"script-data-end-tag-name-state" -> "appropriate-end-tag-token" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E"];
"script-data-end-tag-name-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"script-data-end-tag-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"script-data-end-tag-name-state" -> "data-state" [label="'&gt;' U+003E"];
"script-data-end-tag-name-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-end-tag-name-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-end-tag-name-state" -> "script-data-state" [label="Anything else"];
"script-data-end-tag-name-state" -> "emit-character U+002F" [label="Anything else"];
"between-doctype-public-and-system-identifiers-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"between-doctype-public-and-system-identifiers-state" -> "data-state" [label="'&gt;' U+003E"];
"between-doctype-public-and-system-identifiers-state" -> "doctype-system-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"between-doctype-public-and-system-identifiers-state" -> "doctype-system-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"between-doctype-public-and-system-identifiers-state" -> "parse-error" [label="EOF, Anything else"];
"between-doctype-public-and-system-identifiers-state" -> "bogus-doctype-state" [label="Anything else"];
"after-doctype-public-identifier-state" -> "between-doctype-public-and-system-identifiers-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-doctype-public-identifier-state" -> "data-state" [label="'&gt;' U+003E"];
"after-doctype-public-identifier-state" -> "parse-error" [label="'&quot;' U+0022, &quot;'&quot; U+0027, EOF, Anything else"];
"after-doctype-public-identifier-state" -> "doctype-system-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"after-doctype-public-identifier-state" -> "doctype-system-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"after-doctype-public-identifier-state" -> "bogus-doctype-state" [label="Anything else"];
"script-data-double-escape-end-state" -> "temporary-buffer" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-double-escape-end-state" -> "script-data-double-escaped-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, Anything else"];
"script-data-double-escape-end-state" -> "current-input-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"after-doctype-system-identifier-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-doctype-system-identifier-state" -> "data-state" [label="'&gt;' U+003E"];
"after-doctype-system-identifier-state" -> "parse-error" [label="EOF, Anything else"];
"comment-end-bang-state" -> "comment-end-dash-state" [label="'-' U+002D"];
"comment-end-bang-state" -> "data-state" [label="'&gt;' U+003E, EOF"];
"comment-end-bang-state" -> "comment-state" [label="'\x00' U+0000, Anything else"];
"comment-end-bang-state" -> "current-input-character" [label="Anything else"];
"rcdata-state" -> "character-reference-in-rcdata-state" [label="'&' U+0026"];
"rcdata-state" -> "rcdata-less-than-sign-state" [label="'&lt;' U+003C"];
"rcdata-state" -> "parse-error" [label="'\x00' U+0000"];
"rcdata-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"rcdata-state" -> "end-of-file" [label="EOF"];
"rcdata-state" -> "current-input-character" [label="Anything else"];
"rcdata-end-tag-name-state" -> "appropriate-end-tag-token" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E"];
"rcdata-end-tag-name-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"rcdata-end-tag-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"rcdata-end-tag-name-state" -> "data-state" [label="'&gt;' U+003E"];
"rcdata-end-tag-name-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rcdata-end-tag-name-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rcdata-end-tag-name-state" -> "rcdata-state" [label="Anything else"];
"rcdata-end-tag-name-state" -> "emit-character U+002F" [label="Anything else"];
"attribute-value-(single-quoted)-state" -> "after-attribute-value-(quoted)-state" [label="&quot;'&quot; U+0027"];
"attribute-value-(single-quoted)-state" -> "character-reference-in-attribute-value-state" [label="'&' U+0026"];
"attribute-value-(single-quoted)-state" -> "additional-allowed-character" [label="'&' U+0026"];
"attribute-value-(single-quoted)-state" -> "data-state" [label="'\x00' U+0000, EOF"];
"attribute-value-(single-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-escape-start-dash-state" -> "script-data-escaped-dash-dash-state" [label="'-' U+002D"];
"script-data-escape-start-dash-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-escape-start-dash-state" -> "script-data-state" [label="Anything else"];
"script-data-escape-start-dash-state" -> "current-input-character" [label="Anything else"];
"doctype-system-identifier-(single-quoted)-state" -> "after-doctype-system-identifier-state" [label="&quot;'&quot; U+0027"];
"doctype-system-identifier-(single-quoted)-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"doctype-system-identifier-(single-quoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"doctype-system-identifier-(single-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-escaped-dash-state" -> "script-data-escaped-dash-dash-state" [label="'-' U+002D"];
"script-data-escaped-dash-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-escaped-dash-state" -> "script-data-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-escaped-dash-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"script-data-escaped-dash-state" -> "script-data-escaped-state" [label="Anything else"];
"script-data-escaped-dash-state" -> "current-input-character" [label="Anything else"];
"script-data-escaped-less-than-sign-state" -> "temporary-buffer" [label="'/' U+002F, uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-escaped-less-than-sign-state" -> "script-data-escaped-end-tag-open-state" [label="'/' U+002F"];
"script-data-escaped-less-than-sign-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-escaped-less-than-sign-state" -> "script-data-double-escape-start-state" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-escaped-less-than-sign-state" -> "emit-character U+003C" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-escaped-less-than-sign-state" -> "script-data-escaped-state" [label="Anything else"];
"before-attribute-name-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"before-attribute-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"before-attribute-name-state" -> "data-state" [label="'&gt;' U+003E"];
"before-attribute-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"before-attribute-name-state" -> "attribute-name-state" [label="uppercase-ascii-letters, '\x00' U+0000, Anything else"];
"before-attribute-name-state" -> "parse-error" [label="'\x00' U+0000, '&quot;' U+0022, &quot;'&quot; U+0027, '&lt;' U+003C, '=' U+003D, EOF"];
"doctype-name-state" -> "after-doctype-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"doctype-name-state" -> "data-state" [label="'&gt;' U+003E"];
"doctype-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"doctype-name-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"rawtext-less-than-sign-state" -> "temporary-buffer" [label="'/' U+002F"];
"rawtext-less-than-sign-state" -> "rawtext-end-tag-open-state" [label="'/' U+002F"];
"rawtext-less-than-sign-state" -> "rawtext-state" [label="Anything else"];
"rawtext-less-than-sign-state" -> "current-input-character" [label="Anything else"];
"tag-name-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"tag-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"tag-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"tag-name-state" -> "data-state" [label="'\x00' U+0000, EOF, '&gt;' U+003E"];
"after-doctype-name-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-doctype-name-state" -> "data-state" [label="'&gt;' U+003E"];
"after-doctype-name-state" -> "parse-error" [label="EOF, Anything else"];
"after-doctype-name-state" -> "current-input-character" [label="Anything else, Anything else"];
"after-doctype-name-state" -> "ascii-case-insensitive" [label="Anything else"];
"after-doctype-name-state" -> "after-doctype-public-keyword-state" [label="Anything else"];
"after-doctype-name-state" -> "after-doctype-system-keyword-state" [label="Anything else"];
"after-doctype-name-state" -> "bogus-doctype-state" [label="Anything else"];
"rcdata-less-than-sign-state" -> "temporary-buffer" [label="'/' U+002F"];
"rcdata-less-than-sign-state" -> "rcdata-end-tag-open-state" [label="'/' U+002F"];
"rcdata-less-than-sign-state" -> "rcdata-state" [label="Anything else"];
"rcdata-less-than-sign-state" -> "current-input-character" [label="Anything else"];
"rawtext-state" -> "rawtext-less-than-sign-state" [label="'&lt;' U+003C"];
"rawtext-state" -> "parse-error" [label="'\x00' U+0000"];
"rawtext-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"rawtext-state" -> "end-of-file" [label="EOF"];
"rawtext-state" -> "current-input-character" [label="Anything else"];
"script-data-end-tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-end-tag-open-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-end-tag-open-state" -> "script-data-end-tag-name-state" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-end-tag-open-state" -> "script-data-state" [label="Anything else"];
"script-data-end-tag-open-state" -> "emit-character U+002F" [label="Anything else"];
"after-doctype-system-keyword-state" -> "before-doctype-system-identifier-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-doctype-system-keyword-state" -> "parse-error" [label="'&quot;' U+0022, &quot;'&quot; U+0027, '&gt;' U+003E, EOF, Anything else"];
"after-doctype-system-keyword-state" -> "doctype-system-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"after-doctype-system-keyword-state" -> "doctype-system-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"after-doctype-system-keyword-state" -> "data-state" [label="'&gt;' U+003E"];
"after-doctype-system-keyword-state" -> "bogus-doctype-state" [label="Anything else"];
"script-data-double-escaped-dash-state" -> "script-data-double-escaped-dash-dash-state" [label="'-' U+002D"];
"script-data-double-escaped-dash-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-double-escaped-dash-state" -> "script-data-double-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-double-escaped-dash-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"script-data-double-escaped-dash-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"script-data-double-escaped-dash-state" -> "script-data-double-escaped-state" [label="Anything else"];
"script-data-double-escaped-dash-state" -> "current-input-character" [label="Anything else"];
"script-data-less-than-sign-state" -> "temporary-buffer" [label="'/' U+002F"];
"script-data-less-than-sign-state" -> "script-data-end-tag-open-state" [label="'/' U+002F"];
"script-data-less-than-sign-state" -> "script-data-escape-start-state" [label="'!' U+0021"];
"script-data-less-than-sign-state" -> "emit-character U+003C" [label="'!' U+0021"];
"script-data-less-than-sign-state" -> "emit-character U+0021" [label="'!' U+0021"];
"script-data-less-than-sign-state" -> "script-data-state" [label="Anything else"];
"script-data-less-than-sign-state" -> "current-input-character" [label="Anything else"];
"comment-start-state" -> "comment-start-dash-state" [label="'-' U+002D"];
"comment-start-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"comment-start-state" -> "comment-state" [label="'\x00' U+0000, Anything else"];
"comment-start-state" -> "current-input-character" [label="Anything else"];
"attribute-name-state" -> "after-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"attribute-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"attribute-name-state" -> "before-attribute-value-state" [label="'=' U+003D"];
"attribute-name-state" -> "data-state" [label="'&gt;' U+003E"];
"attribute-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"attribute-name-state" -> "parse-error" [label="'\x00' U+0000, '&quot;' U+0022, &quot;'&quot; U+0027, '&lt;' U+003C, EOF"];
"script-data-escaped-dash-dash-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-escaped-dash-dash-state" -> "script-data-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-escaped-dash-dash-state" -> "script-data-state" [label="'&gt;' U+003E"];
"script-data-escaped-dash-dash-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"script-data-escaped-dash-dash-state" -> "script-data-escaped-state" [label="Anything else"];
"script-data-escaped-dash-dash-state" -> "current-input-character" [label="Anything else"];
"script-data-double-escaped-dash-dash-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-double-escaped-dash-dash-state" -> "script-data-double-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-double-escaped-dash-dash-state" -> "script-data-state" [label="'&gt;' U+003E"];
"script-data-double-escaped-dash-dash-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"script-data-double-escaped-dash-dash-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"script-data-double-escaped-dash-dash-state" -> "script-data-double-escaped-state" [label="Anything else"];
"script-data-double-escaped-dash-dash-state" -> "current-input-character" [label="Anything else"];
"before-doctype-name-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"before-doctype-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"before-doctype-name-state" -> "doctype-name-state" [label="uppercase-ascii-letters, '\x00' U+0000"];
"before-doctype-name-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"before-doctype-name-state" -> "data-state" [label="'&gt;' U+003E"];
"data-state" -> "character-reference-in-data-state" [label="'&' U+0026"];
"data-state" -> "tag-open-state" [label="'&lt;' U+003C"];
"data-state" -> "current-input-character" [label="'\x00' U+0000, Anything else"];
"data-state" -> "end-of-file" [label="EOF"];
"doctype-public-identifier-(single-quoted)-state" -> "after-doctype-public-identifier-state" [label="&quot;'&quot; U+0027"];
"doctype-public-identifier-(single-quoted)-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"doctype-public-identifier-(single-quoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"doctype-public-identifier-(single-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-escaped-state" -> "script-data-escaped-dash-state" [label="'-' U+002D"];
"script-data-escaped-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-escaped-state" -> "script-data-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-escaped-state" -> "parse-error" [label="'\x00' U+0000"];
"script-data-escaped-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"script-data-escaped-state" -> "data-state" [label="EOF"];
"script-data-escaped-state" -> "current-input-character" [label="Anything else"];
"rcdata-end-tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rcdata-end-tag-open-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"rcdata-end-tag-open-state" -> "rcdata-end-tag-name-state" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"rcdata-end-tag-open-state" -> "rcdata-state" [label="Anything else"];
"rcdata-end-tag-open-state" -> "emit-character U+002F" [label="Anything else"];
"doctype-state" -> "before-doctype-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"doctype-state" -> "parse-error" [label="EOF, Anything else"];
"before-attribute-value-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"before-attribute-value-state" -> "attribute-value-(double-quoted)-state" [label="'&quot;' U+0022"];
"before-attribute-value-state" -> "attribute-value-(unquoted)-state" [label="'&' U+0026, '\x00' U+0000, Anything else"];
"before-attribute-value-state" -> "current-input-character" [label="'&' U+0026, Anything else"];
"before-attribute-value-state" -> "attribute-value-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"before-attribute-value-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, '&lt;' U+003C, '=' U+003D, '`' U+0060, EOF"];
"after-attribute-name-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-attribute-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"after-attribute-name-state" -> "before-attribute-value-state" [label="'=' U+003D"];
"after-attribute-name-state" -> "data-state" [label="'&gt;' U+003E"];
"after-attribute-name-state" -> "current-input-character" [label="uppercase-ascii-letters, Anything else"];
"after-attribute-name-state" -> "attribute-name-state" [label="uppercase-ascii-letters, '\x00' U+0000, Anything else"];
"after-attribute-name-state" -> "parse-error" [label="'\x00' U+0000, '&quot;' U+0022, &quot;'&quot; U+0027, '&lt;' U+003C, EOF"];
"comment-end-state" -> "data-state" [label="'&gt;' U+003E"];
"comment-end-state" -> "parse-error" [label="'\x00' U+0000, '!' U+0021, '-' U+002D, EOF, Anything else"];
"comment-end-state" -> "comment-state" [label="'\x00' U+0000, Anything else"];
"comment-end-state" -> "current-input-character" [label="Anything else"];
"doctype-system-identifier-(double-quoted)-state" -> "after-doctype-system-identifier-state" [label="'&quot;' U+0022"];
"doctype-system-identifier-(double-quoted)-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"doctype-system-identifier-(double-quoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"doctype-system-identifier-(double-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-escaped-end-tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"script-data-escaped-end-tag-open-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-escaped-end-tag-open-state" -> "script-data-escaped-end-tag-name-state" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-escaped-end-tag-open-state" -> "script-data-escaped-state" [label="Anything else"];
"script-data-escaped-end-tag-open-state" -> "emit-character U+003C" [label="Anything else"];
"script-data-escaped-end-tag-open-state" -> "emit-character U+002F" [label="Anything else"];
"attribute-value-(double-quoted)-state" -> "after-attribute-value-(quoted)-state" [label="'&quot;' U+0022"];
"attribute-value-(double-quoted)-state" -> "character-reference-in-attribute-value-state" [label="'&' U+0026"];
"attribute-value-(double-quoted)-state" -> "additional-allowed-character" [label="'&' U+0026"];
"attribute-value-(double-quoted)-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"attribute-value-(double-quoted)-state" -> "current-input-character" [label="Anything else"];
"script-data-double-escaped-state" -> "script-data-double-escaped-dash-state" [label="'-' U+002D"];
"script-data-double-escaped-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-double-escaped-state" -> "script-data-double-escaped-less-than-sign-state" [label="'&lt;' U+003C"];
"script-data-double-escaped-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"script-data-double-escaped-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"script-data-double-escaped-state" -> "current-input-character" [label="Anything else"];
"comment-start-dash-state" -> "comment-end-state" [label="'-' U+002D"];
"comment-start-dash-state" -> "parse-error" [label="'\x00' U+0000, '&gt;' U+003E, EOF"];
"comment-start-dash-state" -> "comment-state" [label="'\x00' U+0000, Anything else"];
"comment-start-dash-state" -> "current-input-character" [label="Anything else"];
"script-data-double-escape-start-state" -> "temporary-buffer" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, uppercase-ascii-letters, lowercase-ascii-letters"];
"script-data-double-escape-start-state" -> "script-data-escaped-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, Anything else"];
"script-data-double-escape-start-state" -> "current-input-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"attribute-value-(unquoted)-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"attribute-value-(unquoted)-state" -> "character-reference-in-attribute-value-state" [label="'&' U+0026"];
"attribute-value-(unquoted)-state" -> "additional-allowed-character" [label="'&' U+0026"];
"attribute-value-(unquoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"attribute-value-(unquoted)-state" -> "parse-error" [label="'\x00' U+0000, '&quot;' U+0022, &quot;'&quot; U+0027, '&lt;' U+003C, '=' U+003D, '`' U+0060, EOF"];
"attribute-value-(unquoted)-state" -> "current-input-character" [label="Anything else"];
"before-doctype-public-identifier-state" -> "ignore-character" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"before-doctype-public-identifier-state" -> "doctype-public-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"before-doctype-public-identifier-state" -> "doctype-public-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"before-doctype-public-identifier-state" -> "parse-error" [label="'&gt;' U+003E, EOF, Anything else"];
"before-doctype-public-identifier-state" -> "data-state" [label="'&gt;' U+003E"];
"before-doctype-public-identifier-state" -> "bogus-doctype-state" [label="Anything else"];
"end-tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"end-tag-open-state" -> "tag-name-state" [label="uppercase-ascii-letters"];
"end-tag-open-state" -> "data-state" [label="'&gt;' U+003E, EOF, Anything else"];
"after-doctype-public-keyword-state" -> "before-doctype-public-identifier-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-doctype-public-keyword-state" -> "parse-error" [label="'&quot;' U+0022, &quot;'&quot; U+0027, '&gt;' U+003E, EOF, Anything else"];
"after-doctype-public-keyword-state" -> "doctype-public-identifier-(double-quoted)-state" [label="'&quot;' U+0022"];
"after-doctype-public-keyword-state" -> "doctype-public-identifier-(single-quoted)-state" [label="&quot;'&quot; U+0027"];
"after-doctype-public-keyword-state" -> "data-state" [label="'&gt;' U+003E"];
"after-doctype-public-keyword-state" -> "bogus-doctype-state" [label="Anything else"];
"bogus-doctype-state" -> "data-state" [label="'&gt;' U+003E, EOF"];
"bogus-doctype-state" -> "ignore-character" [label="Anything else"];
"plaintext-state" -> "parse-error" [label="'\x00' U+0000"];
"plaintext-state" -> "emit-character U+FFFD" [label="'\x00' U+0000"];
"plaintext-state" -> "end-of-file" [label="EOF"];
"plaintext-state" -> "current-input-character" [label="Anything else"];
"script-data-escape-start-state" -> "script-data-escape-start-dash-state" [label="'-' U+002D"];
"script-data-escape-start-state" -> "emit-character U+002D" [label="'-' U+002D"];
"script-data-escape-start-state" -> "script-data-state" [label="Anything else"];
"script-data-escape-start-state" -> "current-input-character" [label="Anything else"];
"rawtext-end-tag-name-state" -> "appropriate-end-tag-token" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020, '/' U+002F, '&gt;' U+003E"];
"rawtext-end-tag-name-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"rawtext-end-tag-name-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"rawtext-end-tag-name-state" -> "data-state" [label="'&gt;' U+003E"];
"rawtext-end-tag-name-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rawtext-end-tag-name-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rawtext-end-tag-name-state" -> "rawtext-state" [label="Anything else"];
"rawtext-end-tag-name-state" -> "emit-character U+002F" [label="Anything else"];
"comment-state" -> "comment-end-dash-state" [label="'-' U+002D"];
"comment-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"comment-state" -> "current-input-character" [label="Anything else"];
"tag-open-state" -> "markup-declaration-open-state" [label="'!' U+0021"];
"tag-open-state" -> "end-tag-open-state" [label="'/' U+002F"];
"tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"tag-open-state" -> "tag-name-state" [label="uppercase-ascii-letters"];
"tag-open-state" -> "comment-state" [label="'?' U+003F, Anything else"];
"tag-open-state" -> "data-state" [label="Anything else"];
"rawtext-end-tag-open-state" -> "current-input-character" [label="uppercase-ascii-letters, uppercase-ascii-letters, lowercase-ascii-letters, Anything else"];
"rawtext-end-tag-open-state" -> "temporary-buffer" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"rawtext-end-tag-open-state" -> "rawtext-end-tag-name-state" [label="uppercase-ascii-letters, lowercase-ascii-letters"];
"rawtext-end-tag-open-state" -> "rawtext-state" [label="Anything else"];
"self-closing-start-tag-state" -> "data-state" [label="'&gt;' U+003E"];
"self-closing-start-tag-state" -> "parse-error" [label="EOF, Anything else"];
"after-attribute-value-(quoted)-state" -> "before-attribute-name-state" [label="'\t' U+0009, '\n' U+000A, '\x0c' U+000C, ' ' U+0020"];
"after-attribute-value-(quoted)-state" -> "self-closing-start-tag-state" [label="'/' U+002F"];
"after-attribute-value-(quoted)-state" -> "data-state" [label="'&gt;' U+003E"];
"after-attribute-value-(quoted)-state" -> "parse-error" [label="EOF, Anything else"];
"comment-end-dash-state" -> "comment-end-state" [label="'-' U+002D"];
"comment-end-dash-state" -> "parse-error" [label="'\x00' U+0000, EOF"];
"comment-end-dash-state" -> "comment-state" [label="'\x00' U+0000, Anything else"];
"comment-end-dash-state" -> "current-input-character" [label="Anything else"];

"character-reference-in-data-state" -> "data-state" [label="Anything else"];
"character-reference-in-attribute-value-state" -> "attribute-value-(single-quoted)-state" [label="Anything else"];
"markup-declaration-open-state"  -> "comment-state" [label="--"];
}